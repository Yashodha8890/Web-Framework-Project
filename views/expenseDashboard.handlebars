<div class="container-fluid min-h-screen bg-gray-50 p-0">
  <div class="row g-0">
    <!-- Sidebar -->
    <div class="col-sm-3 bg-green-600 text-white p-3">
      <nav class="nav flex-column">
        <div class="mb-4">
          <a href="#"><img src="/images/Logo DRT.jpg" alt="Logo" class="img-fluid mb-3"></a>
        </div>
        <a class="py-2 text-center text-xl hover:bg-green-500 rounded" href="/home">Home</a>
        <a class="py-2 text-center text-xl hover:bg-green-500 rounded" href="/activityTracker">Activity Tracker</a>
        <a class="py-2 text-center text-xl hover:bg-green-500 rounded" href="/addExpense">Money Tracker</a>
        <a class="py-2 text-center text-xl hover:bg-green-500 rounded" href="#">Dashboard</a>
        <a class="py-2 text-center text-xl hover:bg-green-500 rounded" href="#">Profile</a>
      </nav>
    </div>

    <!-- Main Content -->
    <div class="col-sm-9 p-4">
      <h1 class="text-4xl font-bold text-center mb-4">

      <!-- Filters -->
      <div class="row mb-4">
        <div class="col-md-6">
          <label for="expenseCategory" class="form-label">Filter by Category:</label>
          <select id="expenseCategory" class="form-select">
            <option value="All">All</option>
            <option value="Food">Food</option>
            <option value="Transport">Transport</option>
            <option value="Housing">Housing</option>
            <option value="Utilities">Utilities</option>
            <option value="Entertainment">Entertainment</option>
            <option value="Travel">Travel</option>
            <option value="Shopping">Shopping</option>
          </select>
        </div>
        <div class="col-md-6">
          <label for="expenseStatus" class="form-label">Filter by Status:</label>
          <select id="expenseStatus" class="form-select">
            <option value="All">All</option>
            <option value="Paid">Paid</option>
            <option value="Due">Due</option>
            <option value="Overdue">Overdue</option>
            <option value="Planned">Planned</option>
            <option value="Cancelled">Cancelled</option>
          </select>
        </div>
      </div>

      
      <!-- Charts -->
      <div class="row">
        <div class="col-md-6 mb-4">
          <canvas id="statusPieChart"></canvas>
        </div>
        <div class="col-md-6 mb-4">
          <canvas id="categoryBarChart"></canvas>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  const categoryFilter = document.getElementById('expenseCategory');
  const statusFilter = document.getElementById('expenseStatus');
  const rows = document.querySelectorAll('#expenseTable tr');

  function applyFilters() {
    const selectedCategory = categoryFilter.value;
    const selectedStatus = statusFilter.value;

    rows.forEach(row => {
      const rowCategory = row.dataset.category;
      const rowStatus = row.dataset.status;

      const matchCategory = (selectedCategory === 'All' || rowCategory === selectedCategory);
      const matchStatus = (selectedStatus === 'All' || rowStatus === selectedStatus);

      row.style.display = (matchCategory && matchStatus) ? '' : 'none';
    });
  }

  categoryFilter.addEventListener('change', applyFilters);
  statusFilter.addEventListener('change', applyFilters);

  // Fetch data from backend and build charts
  fetch('/api/expense-summary')
    .then(res => res.json())
    .then(data => {
      // Pie Chart - Status
      const ctxStatus = document.getElementById('statusPieChart').getContext('2d');
      new Chart(ctxStatus, {
        type: 'pie',
        data: {
          labels: Object.keys(data.status),
          datasets: [{
            label: 'Expense Status',
            data: Object.values(data.status),
            backgroundColor: ['green', 'orange', 'red', 'gray', 'black']
          }]
        }
      });

      // Bar Chart - Category
      const ctxCategory = document.getElementById('categoryBarChart').getContext('2d');
      new Chart(ctxCategory, {
        type: 'bar',
        data: {
          labels: Object.keys(data.category),
          datasets: [{
            label: 'Total Spent ($)',
            data: Object.values(data.category),
            backgroundColor: ['#4caf50', '#ff9800', '#3f51b5', '#00bcd4', '#9c27b0']
          }]
        }
      });
    })
    .catch(err => console.error('Failed to load chart data', err));
</script>